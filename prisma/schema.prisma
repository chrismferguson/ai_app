// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  clerkId String         @unique
  email   String         @unique
  name String?
  account Account?
  entries JournalEntry[]
  analysis EntryAnalysis[]
}

model Account {
  id String @id @default(uuid())
  userId String
  user User @relation(fields: [userId], references: [id])
  @@unique([userId])
}

enum JOURNAL_ENTRY_STATUS {
  DRAFT
  PUBLISHED
  ARCHIVED
}

model JournalEntry {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId  String
  user    User   @relation(fields: [userId], references: [id])
  content String @db.Text

  status JOURNAL_ENTRY_STATUS @default(DRAFT)

  analysis EntryAnalysis?

  @@unique([userId, id])
}

//make a change to database: npx prisma db push 
// this is the AI section

model EntryAnalysis {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  entryId String
  entry   JournalEntry @relation(fields: [entryId], references: [id], onDelete: Cascade)

  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  

  mood     String @db.Text
  summary  String  @db.Text
  color    String @db.Text 
  burnout Boolean 
  subject String @db.Text

  @@unique([entryId])
  @@index([userId])
}
